---
title: "Day 2 Computational Session"
format: html
editor: visual
execute:
  warning: false
  message: false
---

## Vectors

```{r}
#Creating a vector
dogs <- c("teddy", "khora", "waffle", "tally")

#Checking the class
class(dogs)

```

```{r}
#Creating a new vector
cats <- c("creamsicle wolf", 14.2, 3L)

#Checking the class
class(cats)

```

```{r}
#Creating new vector
years <- c(20, 40, 16, 2)

#checking the class
class(years)
typeof(years)
```

```{r}
#Want to do a conditional check 
# is. <<< asks questions "is this THIS"
# as. <<< gives a command "make this THIS"

is.numeric(years)
is.numeric(character)

```

```{r}
dog_food <- c(teddy = "purina", khora = "alpo", "waffle" = "fancy feast")

dog_food

dog_food[2]

dog_food["khora"]

```

```{r}
cars <- c("blue", "orange", "white")
cars[1]

i <- seq(1:2)
cars[i]

```

```{r}
cars[3] <- "yellow"
```

## Matrices

```{r}
fish_size <- matrix(c(12, 14, 18, 20), 
                    ncol = 2, 
                    nrow = 2,
                    byrow = FALSE)

class(fish_size)

#example of indexing
fish_size[1,1]
fish_size[2,1]

typeof(fish_size)
```

```{r}
#what happens if we create a matrix with different types of data
fish_type <- matrix(c(12, "trout", 18, 13L), 
                    ncol = 2,
                    nrow =2,
                    byrow = FALSE)

class(fish_type)
typeof(fish_type)

fish_size[2,]
fish_size[,1]
```

## Lists

Reminder: A list combines vectors that can be of different length and type

```{r}
urchins <- list("blue", 
                c(1, 2, 3), 
                c("a cat", "a dog"), 
                5L)
#view urchins
urchins

#Output is just the vector value
urchins[[3]]
```

## Make a names list

```{r}
tacos <- list(topping = c("onion", "cilantro", "guacamole"),
              filling = c("beans", "meat", "veggies"),
              price = c(6.75, 8.25, 9.50))

tacos

#Indexing list elements by name
tacos$filling[2]
```

```{r}

a <- c(1,2,3)
b <- c(3,4,5)

my_ttest <- t.test(a,b)

class(my_ttest)

my_ttest$conf.int
```

the confidence interval is `r my_ttest$conf.int`
